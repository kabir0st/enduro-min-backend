# Generated by Django 4.2.5 on 2024-02-27 11:10

import core.utils.functions
from django.db import migrations, models
import users.models.users
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('stripe_customer_id', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', models.CharField(blank=True, default='', max_length=15)),
                ('gender', models.CharField(default='', max_length=8)),
                ('dob', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, default='')),
                ('zip_code', models.CharField(blank=True, default='', max_length=10)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('unknown', 'Unknown')], default='unknown', max_length=7)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=users.models.users.image_directory_path)),
                ('distance_ran', models.DecimalField(decimal_places=2, default=0.0, max_digits=60)),
                ('event_participated_in_count', models.PositiveIntegerField(default=0)),
                ('indexes', models.JSONField(blank=True, default=core.utils.functions.default_json)),
                ('preferred_size', models.CharField(blank=True, default='', max_length=5)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(max_length=255)),
                ('status', models.CharField(default='processing', max_length=255)),
                ('document', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'ordering': ['-is_active', '-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted_indexes', models.JSONField(default=core.utils.functions.default_array)),
                ('usd_npr_exchange_rate', models.DecimalField(decimal_places=2, default=135.0, max_digits=60)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, editable=False, max_length=6, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('is_email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expiration_time', models.DateTimeField(blank=True, null=True)),
                ('otp_for', models.CharField(default='email_verification', max_length=255)),
            ],
        ),
        migrations.AddConstraint(
            model_name='verificationcode',
            constraint=models.UniqueConstraint(fields=('code', 'email'), name='verification_unique_constraints'),
        ),
        migrations.AddField(
            model_name='userbase',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='userbase',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
